package com.xmheart.mapper;

import com.xmheart.model.XPWArticle;
import com.xmheart.model.XPWDoctor;
import com.xmheart.model.XPWDoctorExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface XPWDoctorMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	long countByExample(XPWDoctorExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	int deleteByExample(XPWDoctorExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	@Delete({ "delete from xpw_doctor", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	@Insert({ "insert into xpw_doctor (his_id, name, ", "dept_id, duty, professional_title, ", "grade, brief, intro, ",
			"url, image_url, is_displayed, ", "doc_order, appointment_url)",
			"values (#{hisId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
			"#{deptId,jdbcType=BIGINT}, #{duty,jdbcType=VARCHAR}, #{professionalTitle,jdbcType=VARCHAR}, ",
			"#{grade,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, ",
			"#{url,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, #{isDisplayed,jdbcType=TINYINT}, ",
			"#{docOrder,jdbcType=INTEGER}, #{appointmentUrl,jdbcType=VARCHAR})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insert(XPWDoctor record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	int insertSelective(XPWDoctor record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	List<XPWDoctor> selectByExample(XPWDoctorExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	@Select({ "select", "id, his_id, name, dept_id, duty, professional_title, grade, brief, intro, url, ",
			"image_url, is_displayed, doc_order, appointment_url", "from xpw_doctor",
			"where id = #{id,jdbcType=BIGINT}" })
	@ResultMap("com.xmheart.mapper.XPWDoctorMapper.BaseResultMap")
	XPWDoctor selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	int updateByExampleSelective(@Param("record") XPWDoctor record, @Param("example") XPWDoctorExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	int updateByExample(@Param("record") XPWDoctor record, @Param("example") XPWDoctorExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	int updateByPrimaryKeySelective(XPWDoctor record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table xpw_doctor
	 * @mbg.generated  Sun Mar 11 22:24:33 CST 2018
	 */
	@Update({ "update xpw_doctor", "set his_id = #{hisId,jdbcType=INTEGER},", "name = #{name,jdbcType=VARCHAR},",
			"dept_id = #{deptId,jdbcType=BIGINT},", "duty = #{duty,jdbcType=VARCHAR},",
			"professional_title = #{professionalTitle,jdbcType=VARCHAR},", "grade = #{grade,jdbcType=VARCHAR},",
			"brief = #{brief,jdbcType=VARCHAR},", "intro = #{intro,jdbcType=VARCHAR},",
			"url = #{url,jdbcType=VARCHAR},", "image_url = #{imageUrl,jdbcType=VARCHAR},",
			"is_displayed = #{isDisplayed,jdbcType=TINYINT},", "doc_order = #{docOrder,jdbcType=INTEGER},",
			"appointment_url = #{appointmentUrl,jdbcType=VARCHAR}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(XPWDoctor record);

	@Select("SELECT d.id as id, d.name as name, d.duty as duty, d.professional_title as professional_title, "
			+ "d.grade as grade, d.url as url, d.image_url as image_url, d.intro as intro, d.appointment_url as appointment_url, " +
		    "t.name as dept_name, t.dept_doctor_url as dept_url " +
		    "FROM xpw_doctor as d " +
		    "LEFT JOIN xpw_dept AS t " +
    	    "ON " +  
    		"d.dept_id = t.id where d.id = #{id}")

	@ResultMap(value = { "doctorWithDeptMap" })
    XPWDoctor selectDoctorWithDeptByPrimaryKey(@Param("id") long id);
	
    @Select({ "SELECT * from xpw_doctor where is_displayed = 1 and name like '%${keywords}%' \n"})
    List<XPWDoctor> selectDoctorByName(@Param("keywords") String keywords);
}