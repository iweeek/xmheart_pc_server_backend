import org.gradle.plugins.ide.eclipse.model.Facet

buildscript {
  repositories {
    maven {
      url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
  }
  dependencies {
    classpath "org.hidetake:gradle-ssh-plugin:2.9.0"
  }
}

//定义要使用的插件
apply plugin: "base"
apply plugin: "java"
apply plugin: "war"
//apply plugin: "jetty"
apply plugin: "eclipse-wtp"
apply plugin: "eclipse"
apply plugin: "org.hidetake.ssh"

sourceCompatibility = "1.8"   // 设置 JDK 版本
webAppDirName = "WebContent"

// 设置 Java 源码所在目录
sourceSets.main.java.srcDirs "src/main/java"
sourceSets.main.resources.srcDirs "src/main/resources"

//定义jar包仓库
repositories {  
     
     //使用maven2仓库
    mavenCentral()
    
    //定义从本地的lib文件夹中寻找依赖的jar包
    flatDir {
        dirs "lib"
    }
    
}

//定义依赖
dependencies {
    //定义版本
    def mybatisSpringVersion = "1.2.3"
    def springVersion        = "4.2.2.RELEASE"
    def junitVersion         = "4.12"
    def mybatisVersion       = "3.3.0"  
    
    //依赖定义的格式解释：“依赖分组名称：依赖名称：依赖版本“
    //定义编译时必须有的依赖
    compile (
    
        //spring
        "org.springframework:spring-context:$springVersion",
        "org.springframework:spring-webmvc:$springVersion",
        "org.springframework:spring-jdbc:$springVersion",
        "org.springframework:spring-tx:$springVersion",
    
        //mybatis
        "org.mybatis:mybatis-spring:$mybatisSpringVersion",
        "org.mybatis:mybatis:$mybatisVersion"
    )
    compile group: 'org.apache.velocity', name: 'velocity', version: '1.6.2'
    compile group: 'org.apache.velocity', name: 'velocity-tools', version: '2.0'
    compile group: 'org.springframework', name: 'spring-context-support', version: '3.2.2.RELEASE'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.26-incubating'
    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.8.2'
	compile group: 'org.mybatis', name: 'mybatis', version: '3.4.4'
	compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.1'
	compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
	compile group: 'org.apache.shiro', name: 'shiro-spring', version: '1.3.2'
	compile group: 'org.apache.shiro', name: 'shiro-ehcache', version: '1.2.3'
	
	compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.8.2'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8.1'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile 'javax.servlet:javax.servlet-api:3.0.1'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.5'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
    compile group: 'com.github.pagehelper', name: 'pagehelper', version: '5.0.2'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile group: 'org.json', name: 'json', version: '20160810'
    compile group: 'c3p0', name: 'c3p0', version: '0.9.0.4'
    
    //定义编译测试时必须有的依赖
    testCompile (
    
        //junit
        "junit:junit:$junitVersion"
        
    )
    
    //定义运行时必须有的依赖
    //runTime (
        
    //)
    
    //定义测试运行时必须有的依赖
    //testRunTime (
    
    //)
    
  }
  
   // 设置 Project Facets
eclipse {
    wtp {
        facet {
            facet name: 'jst.web', type: Facet.FacetType.fixed
            facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
            facet name: 'jst.java', type: Facet.FacetType.fixed
            facet name: 'jst.web', version: '2.5'
            facet name: 'jst.java', version: '1.8'
            facet name: 'wst.jsdt.web', version: '1.0'
        }
    }
}

remotes {
  testServer {
    host = '120.77.72.16'
    user = 'root'
    identity = file(System.getProperty('user.home') + '/.ssh/id_rsa_16')
  }
}

task deploy(dependsOn: [war]) {
    doLast {
        ssh.run {
          session(remotes.testServer) {
            remove '/usr/local/webserver/tomcat/webapps/xmheart_pc_server_backend.war'
            put from: buildDir.toString() + '/libs/xmheart_pc_server_backend.war', into: '/usr/local/webserver/tomcat/webapps/'
          }
        }
    }
}

task gitTag(type: Exec) {
    description 'git tag.'
    println 'perform git tag'
    commandLine "git", "branch", "-v"
}


