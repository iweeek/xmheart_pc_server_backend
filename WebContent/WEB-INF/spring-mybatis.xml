<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="classpath:config.properties" />

	<!-- 1. 数据源 : DriverManagerDataSource -->
<!-- 	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">  
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
	    <property name="jdbcUrl" value="${database.url}"/>  
	    <property name="user" value="${database.username}"/>  
	    <property name="password" value="${database.password}"/>  
	    <!--连接池中保留的最小连接数。 -->  
	    <property name="minPoolSize" value="10" />  
	    <!--连接池中保留的最大连接数。Default: 15 -->  
	    <property name="maxPoolSize" value="15" />  
	    <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
	    <property name="maxIdleTime" value="1800" />  
	    <property name="initialPoolSize" value="10" />  
	    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
	    <property name="acquireIncrement" value="3" />  
	    <property name="maxStatements" value="0" />  
	    <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
	    <property name="idleConnectionTestPeriod" value="60" />  
	    <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
	    <property name="acquireRetryAttempts" value="30" />  
	    <property name="breakAfterAcquireFailure" value="true" />  
	    <property name="testConnectionOnCheckout" value="false" />  
	</bean>  
	
	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configuration">
			<bean class="org.apache.ibatis.session.Configuration">
				<property name="mapUnderscoreToCamelCase" value="true" />
			</bean>
		</property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!--使用下面的方式配置参数，一行配置一个 -->
						<value>
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xmheart.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans> 